VAR
	GearControl : gear_typ; (*control structure*)
	MC_GearIn_0 : MC_GearIn; (*Function Block*)
	MC_GearOut_0 : MC_GearOut; (*Function Block*)
	MC_Home_0 : MC_Home; (*Function Block*)
	MC_MoveAbsolute_0 : MC_MoveAbsolute; (*Function Block*)
	MC_MoveAdditive_0 : MC_MoveAdditive; (*Function Block*)
	MC_MoveVelocity_0 : MC_MoveVelocity; (*Function Block*)
	MC_Power_0 : MC_Power; (*Function Block*)
	MC_ReadActualPosition_0 : MC_ReadActualPosition; (*Function Block*)
	MC_ReadActualVelocity_0 : MC_ReadActualVelocity; (*Function Block*)
	MC_ReadAxisError_0 : MC_ReadAxisError; (*Function Block*)
	MC_ReadStatus_0 : MC_ReadStatus; (*Function Block*)
	MC_Reset_0 : MC_Reset; (*Function Block*)
	MC_Stop_0 : MC_Stop; (*Function Block*)
	MC_BR_ReadDriveStatus_0 : MC_BR_ReadDriveStatus; (*Function Block*)
	MC_Halt_0 : MC_Halt; (*Function Block*)
	Axis1Obj : UDINT; (*axis reference*)
	Axis2Obj : UDINT; (*axis reference*)
	AxisStep : UINT; (*current step in the step sequence*)
END_VAR
VAR CONSTANT
	STATE_POWER_ON : USINT := 1; (*constant for the step in which the controller is switched on*)
	STATE_MOVE_VELOCITY : USINT := 16; (*constant for the step in which a movement with defiened velocity is started*)
	STATE_MOVE_ADDITIVE : USINT := 15; (*constant for the step in which a movement with defiened distance is started*)
	STATE_READY : USINT := 10; (*constant for a waiting step*)
	STATE_JOG_NEGATIVE : USINT := 13; (*constant for the step in which a negative jogging movement is executed*)
	STATE_WAIT : USINT := 0; (* constant for a waiting step*)
	STATE_STOP : USINT := 11; (*constant for the step in which movements are stopped*)
	STATE_MOVE_ABSOLUTE : USINT := 14; (*constant for the step in which a movement to defiened position is started*)
	STATE_GEAR_START : USINT := 20; (*constant for the step in which the coupling is startet*)
	STATE_ERROR_RESET : USINT := 102; (*constant for the step in which the errors are reset*)
	STATE_ERROR_AXIS : USINT := 100; (*constant for the axis error step*)
	STATE_GEAR_STOP : USINT := 21; (*constant for the step in which the coupling is stopped*)
	STATE_JOG_POSITIVE : USINT := 12; (*constant for the step in which a positive jogging movement is executed*)
	STATE_ERROR : USINT := 101; (*constant for the error step*)
	STATE_HOME : USINT := 2; (*constant for the step in which the axis is homed*)
	STATE_HALT : USINT := 17; (*constant for the step in which movements are stopped*)
END_VAR
